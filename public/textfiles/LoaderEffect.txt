<style id="styling1"></style>
    <style id="styling2"></style>
    <style id="styling3"></style>
    <style id="styling4"></style>
    <style id="styling5"></style>
    <style id="styling6"></style>
    <style id="styling7"></style>
    <style id="styling8"></style>
    <style id="styling9"></style>
    <style id="styling10"></style>
    <style id="styling11"></style>
    <style id="styling12"></style>
    <style id="styling13"></style>
    <style id="styling14"></style>
    <style id="styling15"></style>
    <style id="styling16"></style>
    <style id="styling17"></style>
    <style id="styling18"></style>
    <style id="styling19"></style>
    <style id="styling20"></style>
    <style id="styling21"></style>
    <style id="styling22"></style>
    <style id="styling23"></style>
    <style id="styling24"></style>
    <style id="styling25"></style>
    <style id="styling26"></style>
    <style id="styling27"></style>
    <style id="styling28"></style>
    <style id="styling29"></style>
    <style id="styling30"></style>
    <style id="styling31"></style>
    <style id="styling32"></style>
    <style id="styling33"></style>
    <style id="styling34"></style>
    <style id="styling35"></style>
    <style id="styling36"></style>
    <style id="styling37"></style>
    <style id="styling38"></style>
    <style id="styling39"></style>
    <style id="styling40"></style>
    <style id="styling41"></style>
    <style id="styling42"></style>
    <style id="styling43"></style>
    <style id="styling44"></style>
    <style id="styling45"></style>
    <style id="styling46"></style>
    <style id="styling47"></style>
    <style id="styling48"></style>
    <style id="styling49"></style>
    <style id="styling50"></style>
<h1 class="Main-Body-h1">Gradient Ring Loader</h1>
<div class="html-css-wrap">
<h2 class="Main-Body-h2" style="padding-left:4px;"> HTML</h2>
<h2 class="Main-Body-h2">CSS</h2>
</div>
    <div class="element-4">
        <textarea id="textareaHTML4" placeholder=" HTML goes here..." onkeyup="compileHTML4(this)"
            style="width: 50vw; height: 200px;">
            <div class="GlowingRing-Container">
                <div class="GlowingRing">
                    <div class="loader">
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                    </div>
                </div>  
                <div class="GlowingRing">
                    <div class="loader">
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                    </div>
                </div>  
                <div class="GlowingRing">
                    <div class="loader">
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                    </div>
                </div>  
            </div>
            
                </textarea>
        <textarea id="textareaCSS4" placeholder="CSS goes here..." onkeyup="compileCSS4(this)"
            style="width: 50vw; height: 200px;">
.GlowingRing-Container
{
    display: flex;
    height: 50vh;
    width: 100%;
    justify-content:space-evenly;
    background: #240229;
}
.GlowingRing{
    margin:0;
    padding: 0;
    display: flex;
    justify-content:center;
    align-items: center;
    background: #240229;
}
.loader
{
    position: relative;
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background: linear-gradient(#14ffe9,#ffeb3b,#ff00e0);
    animation:animate .5s linear infinite ;
}
@keyframes animate
{
    0%
    {
        transform: rotate(0deg);
    }
    100%
    {
        transform: rotate(360deg);
    }
}
.loader span
{
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: linear-gradient(#14ffe9,#ffeb3b,#ff00e0);
}
.loader span:nth-child(1)
{
    filter: blur(5px);
}
.loader span:nth-child(2)
{
    filter: blur(10px);
}
.loader span:nth-child(3)
{
    filter: blur(25px);
}
.loader span:nth-child(4)
{
    filter: blur(50px);
}
.loader:after
{
    content: '';
    position: absolute;
    top: 10px;
    left: 10px;
    right: 10px;
    bottom: 10px;
    background: #240229;
    border-radius: 50%;

}
                </textarea>
    </div>
    <h1 class="Main-Body-h1 middle-output"> OUTPUT</h1>
    <div id="output4"></div>
    <br/>
    <h1 class="Main-Body-h1">Gradient Ring Button</h1>
<div class="html-css-wrap">
<h2 class="Main-Body-h2" style="padding-left:4px;"> HTML</h2>
<h2 class="Main-Body-h2">CSS</h2>
</div>
    <div class="element-5">
        <textarea id="textareaHTML5" placeholder=" HTML goes here..." onkeyup="compileHTML5(this)"
            style="width: 50vw; height: 200px;">

            <div class="GlowingButton">
                
                <div id="loader1" class="loader1">
                    <span id="loader-span1"></span>
                    <span id="loader-span2"></span>
                    <span id="loader-span3"></span>
                    <span id="loader-span4"></span>
                </div>
                <button class="button" onclick="show_sigin()">Click on me</button>
                
            </div> 
            <script>
                    function show_sigin() {
                        document.getElementById("loader1").style.background = "linear-gradient(#14ffe9,#ffeb3b,#ff00e0)";
                        document.getElementById("loader1").style.animation = "animate .5s linear infinite";
                        document.getElementById("loader-span1").style.background = "linear-gradient(#14ffe9,#ffeb3b,#ff00e0)";
                        document.getElementById("loader-span2").style.background = "linear-gradient(#14ffe9,#ffeb3b,#ff00e0)";
                        document.getElementById("loader-span3").style.background = "linear-gradient(#14ffe9,#ffeb3b,#ff00e0)";
                        document.getElementById("loader-span4").style.background = "linear-gradient(#14ffe9,#ffeb3b,#ff00e0)";
                    }
                </script> 
            </textarea>
        <textarea id="textareaCSS5" placeholder="CSS goes here..." onkeyup="compileCSS5(this)"
            style="width: 50vw; height: 200px;">
.GlowingButton{
display: flex;
height: 50vh;
margin:0;
padding: 0;
display: flex;
                justify-content:center;
                align-items: center;
                background: #240229;
                z-index: 1;
            }
.GlowingButton .button
{
    position:absolute;
    z-index: 2;
    background:#240229;
    font-weight: bolder;
    border: none;
    font-size: large;
    color: white;
            }
.loader1
{
    position: relative;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    /* background: linear-gradient(#14ffe9,#ffeb3b,#ff00e0); */
    /* animation:animate .5s linear infinite ; */
    z-index: 1;
}
@keyframes animate
{
    0%
    {
        transform: rotate(0deg);
    }
    100%
    {
        transform: rotate(360deg);
    }
}
.loader1 span
{
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    /* background: linear-gradient(#14ffe9,#ffeb3b,#ff00e0); */
    z-index: 1;
}
#loader-span1
{
    filter: blur(5px);
    z-index: 1;
}
#loader-span2
{
    filter: blur(10px);
    z-index: 1;
}
#loader-span3
{
    filter: blur(25px);
    z-index: 1;
}
#loader-span4
{
    filter: blur(50px);
    z-index: 1;
}
.loader1:after
{
    content: '';
    position: absolute;
    top: 10px;
    left: 10px;
    right: 10px;
    bottom: 10px;
    background: #240229;
    border-radius: 50%;
    z-index: 1;
}
</textarea>
    </div>
    <h1 class="Main-Body-h1 middle-output"> OUTPUT</h1>
    <div id="output5"></div>
    <br/>
    <h1 class="Main-Body-h1">Wavy Bridge Loader</h1>
<div class="html-css-wrap">
<h2 class="Main-Body-h2" style="padding-left:4px;"> HTML</h2>
<h2 class="Main-Body-h2">CSS</h2>
</div>
    <div class="element-9">
        <textarea id="textareaHTML9" placeholder="HTML goes here..." onkeyup="compileHTML9(this)" style="width: 50vw; height: 200px;">
            <div class="LoadingBodyContainer">
                <div class="BarLoader">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
            </div>
        </textarea>
        <textarea id="textareaCSS9" placeholder="CSS goes here..." onkeyup="compileCSS9(this)"
            style="width: 50vw; height: 200px;">
            .LoadingBodyContainer{
                margin: 0;
                padding: 0;
                display: flex;
                justify-content: center;
                align-items: center;
                height: 50vh;
                background: #0092ff;
            }
            .BarLoader
            {
                position: relative;
                display: flex;
            }
            .BarLoader span
            {
                width: 50px;
                height: 250px;
                margin: 0 20px;
                background: #0092ff;
                animation: animateBarloader 1.6s linear infinite;
            }
            .BarLoader span:nth-child(1)
            {
                animation-delay: 0.1s;
            }
            .BarLoader span:nth-child(2)
            {
                animation-delay: 0.2s;
            }
            .BarLoader span:nth-child(3)
            {
                animation-delay: 0.4s;
            }
            .BarLoader span:nth-child(4)
            {
                animation-delay: 0.6s;
            }
            .BarLoader span:nth-child(5)
            {
                animation-delay: 0.8s;
            }
            .BarLoader span:nth-child(6)
            {
                animation-delay: 1s;
            }
            .BarLoader span:nth-child(7)
            {
                animation-delay: 1.2s;
            }
            /* .BarLoader span:nth-child(8)
            {
                animation-delay: 1.4s;
            } */
            @keyframes animateBarloader
            {
                0%
                {
                    box-shadow: 0 0 0 black;
                    opacity: 0;
                    transform: translateX(-50px) scale(1);
                }
                50%
                {
                    box-shadow: 0 20px 50px black;
                    opacity: 1;
                    transform: translateX(0px) scale(1.2);
                }
                100%
                {
                    box-shadow: 0 0 0 black;
                    opacity: 0;
                    transform: translateX(50px) scale(1);
                }
            }
        </textarea>
    </div>
    <h1 class="Main-Body-h1 middle-output"> OUTPUT</h1>
    <div id="output9"></div>
    <br/>
    <h1 class="Main-Body-h1"> Hailing/Raining Effect</h1>
<div class="html-css-wrap">
<h2 class="Main-Body-h2" style="padding-left:4px;"> HTML</h2>
<h2 class="Main-Body-h2">CSS</h2>
</div>
    <div class="element-19">
        <textarea id="textareaHTML19" placeholder="HTML goes here..." onkeyup="compileHTML19(this)" style="width: 50vw; height: 200px;">
           <div class="RainingCloud">
        <div class="container">
            <div class="cloud">
                <div class="rain">
                    <span style="--i:11"></span>
                    <span style="--i:12"></span>
                    <span style="--i:10"></span>
                    <span style="--i:14"></span>
                    <span style="--i:18"></span>
                    <span style="--i:16"></span>
                    <span style="--1:14"></span>
                    <span style="--i:19"></span>
                    <span style="--i:20"></span>
                    <span style="--i:19"></span>
                    <span style="--i:10"></span>
                    <span style="--i:16"></span>
                    <span style="--i:14"></span>
                    <span style="--i:18"></span>
                    <span style="--i:11"></span>
                    <span style="--i:13"></span>
                    <span style="--i:15"></span>
                    <span style="--i:12"></span>
                    <span style="--i:17"></span>
                    <span style="--i:13"></span>
                    <span style="--i:15"></span>
                    
                </div>
                                    
            </div>
        </div>
    </div>
        </textarea>
        <textarea id="textareaCSS19" placeholder="CSS goes here..." onkeyup="compileCSS19(this)" style="width: 50vw; height: 200px;">
          *{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
.RainingCloud{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 70vh;
    min-width: 100%;
    background: #181c1f;
}
.RainingCloud .container{
    display: flex;
    justify-content: center;
    position: relative;
    height: 400px;
    border-bottom: 2px solid #fff;
}
.RainingCloud .cloud{
    position: relative;
    
    top:50px;
    width: 320px;
    height: 100px;
    background: #fff;
    border-radius: 100px;
}
.RainingCloud .cloud::before{
    content: '';
    position: absolute;
    top: -50px;
    left: 40px;
    width:110px;
    height: 110px;
    background: #fff;
    border-radius: 50%;
    box-shadow: 90px 0 0 30px #fff;
}
.RainingCloud .rain{
    position: relative;
    display: flex;
    z-index: 1;
    padding: 0 20px;
    top: 80px;
}
.RainingCloud .rain span{
    position: relative;
    bottom: 30px;
    width: 10px;
    height: 10px;
    background:#fff;
    margin: 0 2px;
    border-radius: 50%;
    animation: animateraincloud 15s linear infinite;
    animation-duration: calc(15s / var(--i));
    transform-origin: bottom ;

}
@keyframes animateraincloud{
    0%
    {
        transform: translateY(0) scale(1);
    }
    70%
    {
        transform: translateY(298px) scale(1);
    }
    100%
    {
        transform: translateY(298px) scale(0);   
    }
}
        </textarea>
        
    </div>
    <h1 class="Main-Body-h1 middle-output"> OUTPUT</h1>
    <div id="output19"></div>
    <br/>
    <h1 class="Main-Body-h1">Infinty Loader</h1>
<div class="html-css-wrap">
<h2 class="Main-Body-h2" style="padding-left:4px;"> HTML</h2>
<h2 class="Main-Body-h2">CSS</h2>
</div>
    <div class="element-26">
        <textarea id="textareaHTML26" placeholder="HTML goes here..." onkeyup="compileHTML26(this)" style="width: 50vw; height: 200px;">
          <div class="InfinityLoader">
    <section>
        <div class="container">
            <div class="circle">
                <span style="--i:0;"></span>
                <span style="--i:1;"></span>
                <span style="--i:2;"></span>
                <span style="--i:3;"></span>
                <span style="--i:4;"></span>
                <span style="--i:5;"></span>
                <span style="--i:6;"></span>
                <span style="--i:7;"></span>
                <span style="--i:8;"></span>
                <span style="--i:9;"></span>
                <span style="--i:10;"></span>
                <span style="--i:11;"></span>
                <span style="--i:12;"></span>
                <span style="--i:13;"></span>
                <span style="--i:14;"></span>
                <span style="--i:15;"></span>
                <span style="--i:16;"></span>
                <span style="--i:17;"></span>
                <span style="--i:18;"></span>
                <span style="--i:19;"></span>
                <span style="--i:20;"></span>
                
            </div>
            <div class="circle">
                <span style="--i:0;"></span>
                <span style="--i:1;"></span>
                <span style="--i:2;"></span>
                <span style="--i:3;"></span>
                <span style="--i:4;"></span>
                <span style="--i:5;"></span>
                <span style="--i:6;"></span>
                <span style="--i:7;"></span>
                <span style="--i:8;"></span>
                <span style="--i:9;"></span>
                <span style="--i:10;"></span>
                <span style="--i:11;"></span>
                <span style="--i:12;"></span>
                <span style="--i:13;"></span>
                <span style="--i:14;"></span>
                <span style="--i:15;"></span>
                <span style="--i:16;"></span>
                <span style="--i:17;"></span>
                <span style="--i:18;"></span>
                <span style="--i:19;"></span>
                <span style="--i:20;"></span>
                
            </div>
        </div>
    </section>
</div>
    </textarea> 
        <textarea id="textareaCSS26" placeholder="CSS goes here..." onkeyup="compileCSS26(this)" style="width: 50vw; height: 200px;">
.InfinityLoader section
{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 50vh;
    background: #042104;
    animation: animateInfinityLoaderColor 8s linear infinite;
}
@keyframes animateInfinityLoaderColor
{
    0%{
        filter: hue-rotate(0deg);
    }
    100%{
        filter: hue-rotate(360deg);
    }
}
.InfinityLoader section .container
{
    display: flex;
    justify-content:center;
    position: relative;
}
.InfinityLoader section .container .circle
{
    position: relative;
    width: 150px;
    height: 150px;
    margin: 0 -7.5px;;

}
.InfinityLoader section .container .circle span
{
    position: absolute;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
    transform: rotate(calc(18deg * var(--i)));
    /* 360 / 20 = 18deg */
    
}
.InfinityLoader section .container .circle span::before
{
    content: '';
    position: absolute;
    right:0;
    top:calc(50% - 7.5px);
    width: 15px;
    height: 15px;
    background: #00ff0a;
    border-radius: 50%;
    box-shadow: 0 0 10px #00ff0a,
    0 0 20px #00ff0a,
    0 0 40px #00ff0a,
    0 0 60px #00ff0a,
    0 0 80px #00ff0a,
    0 0 100px #00ff0a;
    transform: scale(0.1);
    animation: animateInfinityLoader 4s linear infinite;
    animation-delay:calc(0.1s* var(--i)) ;

}
@keyframes animateInfinityLoader{
    0%{
        transform: scale(1);
    }
    50%,100%{
        transform: scale(0.1) ;
    }
}
.InfinityLoader section .container .circle:nth-child(2){
    transform: rotate(-180deg);
}
.InfinityLoader section .container .circle:nth-child(2) span::before{
    animation-delay: calc(-0.1s * var(--i));
}

        </textarea>
        
    </div>
    <h1 class="Main-Body-h1 middle-output"> OUTPUT</h1>
    <div id="output26"></div>
    <br/>
    <h1 class="Main-Body-h1">Milking Effect</h1>
<div class="html-css-wrap">
<h2 class="Main-Body-h2" style="padding-left:4px;"> HTML</h2>
<h2 class="Main-Body-h2">CSS</h2>
</div>
    <div class="element-27">
        <textarea id="textareaHTML27" placeholder="HTML goes here..." onkeyup="compileHTML27(this)" style="width: 50vw; height: 200px;">
<div class="ColourDotsLoaderDiv">
    <div class="dots">
        <div class="dot"></div>
        <div class="dot"></div>
        <div class="dot"></div>
        <div class="dot"></div>
        <div class="dot"></div>
      </div>
  <svg xmlns="http://www.w3.org/2000/svg" version="1.1">
    <defs>
      <filter id="goo">
        <feGaussianBlur in="SourceGraphic" stdDeviation="12" result="blur" />
        <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7" result="goo" />
        <feBlend in="SourceGraphic" in2="goo" />
        </filter>
    </defs>
  </svg>
</div>
    </textarea> 
        <textarea id="textareaCSS27" placeholder="CSS goes here..." onkeyup="compileCSS27(this)" style="width: 50vw; height: 200px;">     
.ColourDotsLoaderDiv {
background: #000;
position: relative;
height:50vh;
  }
  
.ColourDotsLoaderDiv .dots {
    width: 0;
    height: 0;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    filter: url(#goo);
  }
  
  .ColourDotsLoaderDiv .dot{
    width: 0;
    height: 0;
    position: absolute;
    left: 0;
    top: 0;
  }
  .ColourDotsLoaderDiv .dot:before {
    content: "";
    width: 35px;
    height: 35px;
    border-radius: 50px;
    background: #FBD301;
    position: absolute;
    left: 50%;
    transform: translateY(0) rotate(0deg);
    margin-left: -17.5px;
    margin-top: -17.5px;
  }
  @-webkit-keyframes dot-move {
    0% {
      transform: translateY(0);
    }
    18%, 22% {
      transform: translateY(-70px);
    }
    40%, 100% {
      transform: translateY(0);
    }
  }
  @keyframes dot-move {
    0% {
      transform: translateY(0);
    }
    18%, 22% {
      transform: translateY(-70px);
    }
    40%, 100% {
      transform: translateY(0);
    }
  }
  @-webkit-keyframes dot-colors {
    0% {
      background-color: #FBD301;
    }
    25% {
      background-color: #FF3270;
    }
    50% {
      background-color: #208BF1;
    }
    75% {
      background-color: #AFE102;
    }
    100% {
      background-color: #FBD301;
    }
  }
  @keyframes dot-colors {
    0% {
      background-color: #FBD301;
    }
    25% {
      background-color: #FF3270;
    }
    50% {
      background-color: #208BF1;
    }
    75% {
      background-color: #AFE102;
    }
    100% {
      background-color: #FBD301;
    }
  }
  .ColourDotsLoaderDiv .dot:nth-child(5):before {
    z-index: 100;
    width: 45.5px;
    height: 45.5px;
    margin-left: -22.75px;
    margin-top: -22.75px;
    -webkit-animation: dot-colors 4s ease infinite;
            animation: dot-colors 4s ease infinite;
  }
  @-webkit-keyframes dot-rotate-1 {
    0% {
      transform: rotate(-105deg);
    }
    100% {
      transform: rotate(270deg);
    }
  }
  @keyframes dot-rotate-1 {
    0% {
      transform: rotate(-105deg);
    }
    100% {
      transform: rotate(270deg);
    }
  }
  .ColourDotsLoaderDiv .dot:nth-child(1) {
    -webkit-animation: dot-rotate-1 4s 0s linear infinite;
            animation: dot-rotate-1 4s 0s linear infinite;
  }
  .ColourDotsLoaderDiv .dot:nth-child(1):before {
    background-color: #FF3270;
    -webkit-animation: dot-move 4s 0s ease infinite;
            animation: dot-move 4s 0s ease infinite;
  }
  @-webkit-keyframes dot-rotate-2 {
    0% {
      transform: rotate(165deg);
    }
    100% {
      transform: rotate(540deg);
    }
  }
  @keyframes dot-rotate-2 {
    0% {
      transform: rotate(165deg);
    }
    100% {
      transform: rotate(540deg);
    }
  }
  .ColourDotsLoaderDiv .dot:nth-child(2) {
    -webkit-animation: dot-rotate-2 4s 1s linear infinite;
            animation: dot-rotate-2 4s 1s linear infinite;
  }
  .ColourDotsLoaderDiv .dot:nth-child(2):before {
    background-color: #208BF1;
    -webkit-animation: dot-move 4s 1s ease infinite;
            animation: dot-move 4s 1s ease infinite;
  }
  @-webkit-keyframes dot-rotate-3 {
    0% {
      transform: rotate(435deg);
    }
    100% {
      transform: rotate(810deg);
    }
  }
  @keyframes dot-rotate-3 {
    0% {
      transform: rotate(435deg);
    }
    100% {
      transform: rotate(810deg);
    }
  }
  .ColourDotsLoaderDiv .dot:nth-child(3) {
    -webkit-animation: dot-rotate-3 4s 2s linear infinite;
            animation: dot-rotate-3 4s 2s linear infinite;
  }
  .ColourDotsLoaderDiv .dot:nth-child(3):before {
    background-color: #AFE102;
    -webkit-animation: dot-move 4s 2s ease infinite;
            animation: dot-move 4s 2s ease infinite;
  }
  @-webkit-keyframes dot-rotate-4 {
    0% {
      transform: rotate(705deg);
    }
    100% {
      transform: rotate(1080deg);
    }
  }
  @keyframes dot-rotate-4 {
    0% {
      transform: rotate(705deg);
    }
    100% {
      transform: rotate(1080deg);
    }
  }
  .ColourDotsLoaderDiv .dot:nth-child(4) {
    -webkit-animation: dot-rotate-4 4s 3s linear infinite;
            animation: dot-rotate-4 4s 3s linear infinite;
  }
  .ColourDotsLoaderDiv .dot:nth-child(4):before {
    background-color: #FBD301;
    -webkit-animation: dot-move 4s 3s ease infinite;
            animation: dot-move 4s 3s ease infinite;
  }
        </textarea>
        
    </div>
    <h1 class="Main-Body-h1 middle-output"> OUTPUT</h1>
    <div id="output27"></div>
    <br/>
    <h1 class="Main-Body-h1">Scanning Search Effect</h1>
<div class="html-css-wrap">
<h2 class="Main-Body-h2" style="padding-left:4px;"> HTML</h2>
<h2 class="Main-Body-h2">CSS</h2>
</div>
    <div class="element-32">
        <textarea id="textareaHTML32" placeholder="HTML goes here..." onkeyup="compileHTML32(this)" style="width: 50vw; height: 200px;">
<div class="CSSFinger">
    <div class="scanner">
        <div class="fingarprint">
        </div>
        <h3>Scanning ....</h3>
    </div>
</div>
    </textarea> 
        <textarea id="textareaCSS32" placeholder="CSS goes here..." onkeyup="compileCSS32(this)" style="width: 50vw; height: 200px;">     
.CSSFinger {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 50vh;
    background: #111;
}

.CSSFinger .scanner {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.CSSFinger .scanner .fingarprint {
    position: relative;
    width: 300px;
    height: 380px;
    background: url(/public/images/fingerimg.png);
    background-size: 300px;
}

.CSSFinger .scanner .fingarprint::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url(/public/images/fingerimage2.png);
    background-size: 300px;
    animation: CSSFingeranimate 4s ease-in-out infinite;
}

@keyframes CSSFingeranimate {
    0%,
    100% {
        height: 0%;
    }
    50% {
        height: 100%;
    }
}

.CSSFinger .scanner .fingarprint::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 8px;
    background: #3fefef;
    border-radius: 8px;
    filter: drop-shadow(0 0 20px #3fefef) drop-shadow(0 0 60px #3fefef);
    animation: CSSFingeranimate_line 4s ease-in-out infinite;
}

@keyframes CSSFingeranimate_line {
    0%,
    100% {
        top: 0%;
    }
    50% {
        top: 100%;
    }
}

.scanner h3 {
    text-transform: uppercase;
    font-size: 2em;
    letter-spacing: 2px;
    margin-top: 20px;
    color: #3fefef;
    filter: drop-shadow(0 0 20px #3fefef) drop-shadow(0 0 60px #3fefef);
    animation: CSSFingeranimate_text 0.5s steps(1) infinite;
}

@keyframes CSSFingeranimate_text {
    0%,
    100% {
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
}
        </textarea>
        
    </div>
    <h1 class="Main-Body-h1 middle-output"> OUTPUT</h1>
    <div id="output32"></div>
    <br/>
    <h1 class="Main-Body-h1">Energy Ball</h1>
<div class="html-css-wrap">
<h2 class="Main-Body-h2" style="padding-left:4px;"> HTML</h2>
<h2 class="Main-Body-h2">CSS</h2>
</div>
    <div class="element-33">
        <textarea id="textareaHTML33" placeholder="HTML goes here..." onkeyup="compileHTML33(this)" style="width: 50vw; height: 200px;">
<div class="EnergyBall">
<div class="energy">        
    <span style="--ctr:#fbad04;--i:18px;--d:2.5s;"></span>
    <span style="--ctr:#03a1d9;--i:13px;--d:5s;"></span>
    <span style="--ctr:#f7036d;--i:15px;--d:7.5s;"></span>
    <span style="--ctr:#93ff16;--i:20px;--d:10s;"></span>      
</div>
</div>
    </textarea> 
        <textarea id="textareaCSS33" placeholder="CSS goes here..." onkeyup="compileCSS33(this)" style="width: 50vw; height: 200px;">
.EnergyBall
{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 60vh;
    background: #000;
}

.EnergyBall .energy
{
    position: relative;
    width: 300px;
    height: 300px;    
}

.EnergyBall .energy span
{
    position: absolute;
    width: calc(300px + var(--i));
    height: calc(300px + var(--i));
    background: var(--ctr);
    border-radius: 50%;
    transform-origin: calc(100px + var(--i));  
    animation: EnergyBallanimate 5s linear infinite;
    animation-duration: calc(var(--d));
    mix-blend-mode: plus-lighter;   
    filter: blur(30px);   
}

.EnergyBall .energy span:nth-child(even) 
{
    animation-direction: reverse;       
}

@keyframes EnergyBallanimate
{
    0%
    {
        transform: rotate(0deg);    

    }
    100%
     {
       transform: rotate(360deg);      
    }
}
        </textarea>
        
    </div>
    <h1 class="Main-Body-h1 middle-output"> OUTPUT</h1>
    <div id="output33"></div>
    <br/>
    <h1 class="Main-Body-h1">Carnival Light Effect</h1>
<div class="html-css-wrap">
<h2 class="Main-Body-h2" style="padding-left:4px;"> HTML</h2>
<h2 class="Main-Body-h2">CSS</h2>
</div>
    <div class="element-39">
        <textarea id="textareaHTML39" placeholder="HTML goes here..." onkeyup="compileHTML39(this)" style="width: 50vw; height: 200px;">
<div class="MelaLight">
    <div class="box">
        <span style="--i:0;"><i></i></span>
        <span style="--i:1;"><i></i></span>
        <span style="--i:2;"><i></i></span>
        <span style="--i:3;"><i></i></span>
        <span style="--i:4;"><i></i></span>
        <span style="--i:5;"><i></i></span>
        <span style="--i:6;"><i></i></span>
        <span style="--i:7;"><i></i></span>
        <span style="--i:8;"><i></i></span>
        <span style="--i:9;"><i></i></span>
        <span style="--i:10;"><i></i></span>
        <span style="--i:11;"><i></i></span>
        <span style="--i:12;"><i></i></span>
        <span style="--i:13;"><i></i></span>
        <span style="--i:14;"><i></i></span>
        <span style="--i:15;"><i></i></span>
    </div>
</div>
    </textarea> 
        <textarea id="textareaCSS39" placeholder="CSS goes here..." onkeyup="compileCSS39(this)" style="width: 50vw; height: 200px;">
.MelaLight {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 50vh;
    background: black;
  }
  
  .MelaLight  .box {
    position: relative;
    width: 500px;
    height: 500px;
    display: flex;
    justify-content: center;
  }
  
  .MelaLight .box span {
    position: absolute;
    width: 10px;
    height: 250px;
    background: transparent;
    border-bottom: 40px solid transparent;
    transform-origin: bottom;
    transform: rotate(calc(22.5deg * var(--i)));
  }
  
  .MelaLight  .box span::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 50px;
    background: #03a9f4;
    box-shadow: 0 0 20px #03a9f4;
    border-radius: 100px;
    animation: MelaLightanimate 1.5s linear infinite;
    /* animation-delay: calc(0.1s * var(--i)); */
  }
  
  @keyframes MelaLightanimate {
    0% {
      transform: translateY(160px) rotate(0deg);
      filter: hue-rotate(0deg);
    }
    50% {
      transform: translateY(0px);
    }
    100% {
      transform: translateY(160px) rotate(360deg);
      filter: hue-rotate(360deg);
    }
  }
  
  .MelaLight  .box span::after {
    content: "";
    position: absolute;
    bottom: 0;
    width: 20px;
    height: 10px;
    background: #03a9f4;
    transform-origin: bottom;
    transform: rotate(7deg);
    animation: MelaLightanimateColor 1.5s linear infinite;
  }
  
  @keyframes MelaLightanimateColor {
    0% {
      filter: hue-rotate(0deg);
    }
    100% {
      filter: hue-rotate(360deg);
    }
  }
        </textarea>
        
    </div>
    <h1 class="Main-Body-h1 middle-output"> OUTPUT</h1>
    <div id="output39"></div>
    <br/>
    <h1 class="Main-Body-h1">Newton Effect</h1>
<div class="html-css-wrap">
<h2 class="Main-Body-h2" style="padding-left:4px;"> HTML</h2>
<h2 class="Main-Body-h2">CSS</h2>
</div>
    <div class="element-40">
        <textarea id="textareaHTML40" placeholder="HTML goes here..." onkeyup="compileHTML40(this)" style="width: 50vw; height: 200px;">
<div class="NewtonCradle">
    <div class="pendulum">
        <div class="pendulum_box">
          <div class="ball first"></div>
            <div class="ball"></div>
            <div class="ball"></div>
            <div class="ball"></div>
            <div class="ball last"></div>
        </div>
    </div>
</div>
    </textarea> 
        <textarea id="textareaCSS40" placeholder="CSS goes here..." onkeyup="compileCSS40(this)" style="width: 50vw; height: 200px;">
.NewtonCradle{
    background-color: #98cfb2;
    height: 50vh;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .NewtonCradle .pendulum{
    position:absolute; 
    width: 220px;
    height: 180px;
    background-color: #f8c6cf;
    top:50%;
    left:  50%;
    border-radius: 5%;
    align-items: center;
    border-top: 15px solid #eee7d5;
    transform: translate(-50%, -50%);
    }
    .NewtonCradle .pendulum_box{
    display: flex;
    padding: 120px 0 0 10px;
    position: absolute;
    flex: 1;
  }
  .NewtonCradle .ball{
    height: 40px;
    width: 40px;
    border-radius: 50%;
    background-color: #455681;
    position: relative;
    transform-origin: 50% -300%;
    
  }
  .NewtonCradle .ball::before{
      content: '';
      width: 2px;
      height: 120px;
      background-color: #fffeff;
      left: 18px;
      top: -120px;
      position: absolute;
    }
  
    .NewtonCradle .ball.first{
    animation: NewtonCradlefirstball .9s alternate ease-in infinite;
  }
  
  @keyframes NewtonCradlefirstball{
    0%{
      transform: rotate(35deg);
    }
    50%{
      transform: rotate(0deg);
    }
  }
  
  .NewtonCradle .ball.last{
    animation: NewtonCradlelastball .9s alternate ease-out infinite;
  }
  
  @keyframes NewtonCradlelastball{
    50%{
      transform: rotate(0deg);
    }
    100%{
      transform: rotate(-35deg);
    }
  }
        </textarea>
        
    </div>
    <h1 class="Main-Body-h1 middle-output"> OUTPUT</h1>
    <div id="output40"></div>
    <br/>
     <h1 class="Main-Body-h1">Broken Ring Loader</h1>
<div class="html-css-wrap">
<h2 class="Main-Body-h2" style="padding-left:4px;"> HTML</h2>
<h2 class="Main-Body-h2">CSS</h2>
</div>
    <div class="element-42">
        <textarea id="textareaHTML42" placeholder="HTML goes here..." onkeyup="compileHTML42(this)" style="width: 50vw; height: 200px;">
<div class="Broken-Ring">
    <div class="container">
    <div class="ring"></div>
    <div class="ring"></div>
    <div class="ring"></div>
    <p>Loading...</p>
    </div>
</div>
    </textarea> 
        <textarea id="textareaCSS42" placeholder="CSS goes here..." onkeyup="compileCSS42(this)" style="width: 50vw; height: 200px;">
.Broken-Ring{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 50vh;
    background: #111;
}
.Broken-Ring .container
{
    position: relative;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    
}
.Broken-Ring .container .ring
{
    position: relative;
    width: 150px;
    height: 150px;
    margin: -30px;
    border-radius:  50%; 
    border: 4px solid transparent;
    border-top: 4px solid #24ecff ;
    animation: Broken-Ringanimate 4s linear infinite;
}
@keyframes Broken-Ringanimate{
    0%{
        transform: rotate(0deg);
    }
    100%{
        transform: rotate(360deg);
    }
}
.Broken-Ring .container .ring::before{
    content: '';
    position: absolute;
    top: 12px;
    right: 12px;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    background-color: #24ecff;
    box-shadow: 0 0 0 5px #24ecff33,
    0 0 0 10px #e4ecff22,
    0 0 0 20px #24ecff11,
    0 0 20px #24ecff,
    0 0 50px #24ecff;
}
.Broken-Ring .container .ring:nth-child(2){
    animation: Broken-Ringanimate2 4s linear infinite;
    animation-delay: -1s;
    border-top: 4px solid transparent;
    border-left: 4px solid #93ff2d;
}
.Broken-Ring .container .ring:nth-child(2)::before{
    content: '';
    position: absolute;
    top:initial;
    bottom: 12px;
    left: 12px;
    top: 12px;
    right: 12px;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    background-color: #93ff2d;
    box-shadow: 0 0 0 5px #93ff2d33,
    0 0 0 10px #93ff2d22,
    0 0 0 20px #93ff2d11,
    0 0 20px #93ff2d,
    0 0 50px #93ff2d;
}
@keyframes Broken-Ringanimate2 {
    0%{
        transform: rotate(360deg);
    }
    100%{
        transform: rotate(0deg);
    }
}

.Broken-Ring .container .ring:nth-child(3)
{
    animation: Broken-Ringanimate2 4s linear infinite;
    animation-delay: -3s;
    position: absolute;
    top: -66.66px;
    border-top: 4px solid transparent;
    border-left: 4px solid #e41cf8;
    
}
.Broken-Ring .container .ring:nth-child(3)::before{
    content: '';
    position: absolute;
    top:initial;
    bottom: 12px;
    left: 12px;
    top: 12px;
    right: 12px;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    background: #e41cf8;
    box-shadow: 0 0 0 5px #e41cf833,
    0 0 0 10px #e41cf822,
    0 0 0 20px #e41cf811,
    0 0 20px #e41cf8,
    0 0 50px #e41cf8;
}

.Broken-Ring .container p
{
    position: absolute;
    color: #fff;
    font-size: 1.5em;
    font-family: consolas;
    bottom: -80px;
    letter-spacing: 0.2em;
}
        </textarea>
        
    </div>
    <h1 class="Main-Body-h1 middle-output"> OUTPUT</h1>
    <div id="output42"></div>
    <br/>